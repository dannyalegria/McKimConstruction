{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/mnt/c/Users/Ryan/Desktop/McKimConstruction/pages/about.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport { Grid, Cell } from \"styled-css-grid\";\nimport Head from \"next/head\";\nimport Navbar from \"../components/Navbar\";\nimport Block from \"../components/Block\";\nimport Footer from \"../components/Footer\";\n\nvar client = require(\"contentful\").createClient({\n  space: \"kx9ztdbtk5cq\",\n  accessToken: \"UNfXdUa6_vpvne7S_kCNkSdlCo-mI4GZSCKuLGJy-7A\"\n});\n\nfunction AboutPage() {\n  function fetchContentTypes() {\n    return _fetchContentTypes.apply(this, arguments);\n  }\n\n  function _fetchContentTypes() {\n    _fetchContentTypes = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var types;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return client.getContentTypes();\n\n            case 2:\n              types = _context2.sent;\n\n              if (!types.items) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", types.items);\n\n            case 5:\n              console.log(\"Error getting Content Types.\");\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _fetchContentTypes.apply(this, arguments);\n  }\n\n  function fetchEntriesForContentType(_x) {\n    return _fetchEntriesForContentType.apply(this, arguments);\n  }\n\n  function _fetchEntriesForContentType() {\n    _fetchEntriesForContentType = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(contentType) {\n      var entries;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return client.getEntries({\n                content_type: contentType.sys.id\n              });\n\n            case 2:\n              entries = _context3.sent;\n\n              if (!entries.items) {\n                _context3.next = 5;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", entries.items);\n\n            case 5:\n              console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _fetchEntriesForContentType.apply(this, arguments);\n  }\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  useEffect(function () {\n    function getPosts() {\n      return _getPosts.apply(this, arguments);\n    }\n\n    function _getPosts() {\n      _getPosts = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var contentTypes, allPosts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetchContentTypes();\n\n              case 2:\n                contentTypes = _context.sent;\n                _context.next = 5;\n                return fetchEntriesForContentType(contentTypes[0]);\n\n              case 5:\n                allPosts = _context.sent;\n                setPosts(_toConsumableArray(allPosts));\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getPosts.apply(this, arguments);\n    }\n\n    getPosts();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"McKim - About Us\"), __jsx(\"style\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"\\n          html,\\n          body {\\n            height: 100%;\\n          }\\n          body {\\n            margin-left: 0px;\\n            margin-bottom: 0px;\\n            margin-top: 0px;\\n            margin-right: 0px;\\n          }\\n          @charset \\\"UTF-8\\\";\\n          * {\\n            box-sizing: border-box;\\n          }\\n\\n          ::-moz-selection {\\n            background: #2980b9;\\n            color: #fafafa;\\n          }\\n\\n          ::selection {\\n            background: #2980b9;\\n            color: #fafafa;\\n          }\\n\\n          html {\\n            font-size: 1.25rem;\\n          }\\n\\n          body {\\n            background-color: #fafafa;\\n          }\\n\\n          html {\\n            font-family: \\\"Raleway\\\", \\\"HelveticaNeue\\\", \\\"Helvetica Neue\\\", Helvetica, Arial,\\n              sans-serif;\\n            font-size: 15px;\\n          }\\n\\n          h1 {\\n            margin-top: 0.5rem;\\n            margin-bottom: 0.5rem;\\n            font-family: \\\"Raleway\\\", \\\"HelveticaNeue\\\", \\\"Helvetica Neue\\\", Helvetica, Arial,\\n              sans-serif;\\n            font-size: 2rem;\\n            color: #333333;\\n          }\\n\\n          h2 {\\n            margin-top: 0.5rem;\\n            margin-bottom: 0.5rem;\\n            font-family: \\\"Raleway\\\", \\\"HelveticaNeue\\\", \\\"Helvetica Neue\\\", Helvetica, Arial,\\n              sans-serif;\\n            font-size: 1.75rem;\\n            color: #333333;\\n          }\\n\\n          h3 {\\n            margin-top: 0.5rem;\\n            margin-bottom: 0.5rem;\\n            font-family: \\\"Raleway\\\", \\\"HelveticaNeue\\\", \\\"Helvetica Neue\\\", Helvetica, Arial,\\n              sans-serif;\\n            font-size: 1.5rem;\\n            color: #333333;\\n          }\\n\\n          p {\\n            margin-top: 0.5rem;\\n            font-family: \\\"Raleway\\\", \\\"HelveticaNeue\\\", \\\"Helvetica Neue\\\", Helvetica, Arial,\\n              sans-serif;\\n            font-size: 1.25rem;\\n            color: #333333;\\n          }\\n\\n          a {\\n            text-decoration: none;\\n            color: #3498db;\\n          }\\n          a:hover {\\n            color: #2980b9;\\n          }\\n          a:visited {\\n            color: #9b59b6;\\n          }\\n\\n          .flex {\\n            display: flex;\\n          }\\n\\n          .row {\\n            display: flex;\\n            flex-direction: row;\\n            flex-wrap: wrap;\\n            padding: 10% 2.5%;\\n          }\\n\\n          .col {\\n            flex-direction: column;\\n          }\\n\\n          .column {\\n            flex-basis: 100%;\\n          }\\n\\n          @media (min-width: 1200px) {\\n            .row {\\n              display: flex;\\n              flex-direction: row;\\n              flex-wrap: nowrap;\\n            }\\n\\n            .column {\\n              flex: 1;\\n            }\\n          }\\n          .wrap {\\n            flex: row-wrap;\\n          }\\n\\n          .justify-content-start {\\n            justify-content: start;\\n          }\\n\\n          .justify-content-end {\\n            justify-content: end;\\n          }\\n\\n          .justify-content-center {\\n            justify-content: center;\\n          }\\n\\n          .justify-content-between {\\n            justify-content: space-between;\\n          }\\n\\n          .justify-content-around {\\n            justify-content: space-around;\\n          }\\n\\n          .align-items-start {\\n            align-items: start;\\n          }\\n\\n          .align-items-end {\\n            align-items: end;\\n          }\\n\\n          .align-items-center {\\n            align-items: center;\\n          }\\n\\n          .align-items-baseline {\\n            align-items: baseline;\\n          }\\n\\n          .align-items-stretch {\\n            align-items: stretch;\\n          }\\n\\n          .align-self-start {\\n            align-self: start;\\n          }\\n\\n          .align-self-end {\\n            align-self: end;\\n          }\\n\\n          .align-self-center {\\n            align-self: end;\\n          }\\n\\n          .align-self-baseline {\\n            align-self: baseline;\\n          }\\n\\n          .align-self-stretch {\\n            align-self: stretch;\\n          }\\n\\n          .white-1 {\\n            background: #ffffff;\\n          }\\n\\n          .grey-1 {\\n            background: #ecf0f1;\\n          }\\n\\n          a {\\n            color: #ffffff;\\n          }\\n          a:hover {\\n            color: #f1c40f;\\n          }\\n        \")), __jsx(\"div\", {\n    style: {\n      marginLleft: 0,\n      marginBottom: 0,\n      marginTop: 0,\n      marginRight: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, posts.length > 0 ? posts.map(function (p) {\n    return __jsx(Grid, {\n      key: 1,\n      height: \"100%\",\n      columns: \"1fr\",\n      rows: \"82px 1fr 50px\",\n      areas: [\"navbar\", \"content\", \"footer\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, __jsx(Cell, {\n      area: \"navbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, __jsx(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    })), __jsx(Cell, {\n      area: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, __jsx(Block, {\n      title: \"About Us\",\n      subtitle: null,\n      image: p.fields.aboutPageImage.fields.file.url,\n      text: p.fields.aboutPageText,\n      link: \"#\",\n      btnText: null,\n      align: \"left\",\n      bgColor: \"#ffffff\",\n      log: p,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    })), __jsx(Cell, {\n      area: \"footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, __jsx(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    })));\n  }) : null));\n}\n\nexport default AboutPage;","map":{"version":3,"sources":["/mnt/c/Users/Ryan/Desktop/McKimConstruction/pages/about.js"],"names":["useEffect","useState","Grid","Cell","Head","Navbar","Block","Footer","client","require","createClient","space","accessToken","AboutPage","fetchContentTypes","getContentTypes","types","items","console","log","fetchEntriesForContentType","contentType","getEntries","content_type","sys","id","entries","name","posts","setPosts","getPosts","contentTypes","allPosts","marginLleft","marginBottom","marginTop","marginRight","length","map","p","fields","aboutPageImage","file","url","aboutPageText"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Grid, Cell } from \"styled-css-grid\";\nimport Head from \"next/head\";\nimport Navbar from \"../components/Navbar\";\nimport Block from \"../components/Block\";\nimport Footer from \"../components/Footer\";\n\nconst client = require(\"contentful\").createClient({\n  space: \"kx9ztdbtk5cq\",\n  accessToken: \"UNfXdUa6_vpvne7S_kCNkSdlCo-mI4GZSCKuLGJy-7A\"\n});\n\nfunction AboutPage() {\n  async function fetchContentTypes() {\n    const types = await client.getContentTypes();\n    if (types.items) return types.items;\n    console.log(\"Error getting Content Types.\");\n  }\n  async function fetchEntriesForContentType(contentType) {\n    const entries = await client.getEntries({\n      content_type: contentType.sys.id\n    });\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for ${contentType.name}.`);\n  }\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    async function getPosts() {\n      const contentTypes = await fetchContentTypes();\n      const allPosts = await fetchEntriesForContentType(contentTypes[0]);\n      setPosts([...allPosts]);\n    }\n    getPosts();\n  }, []);\n  return (\n    <>\n      <Head>\n        <title>McKim - About Us</title>\n        <style>{`\n          html,\n          body {\n            height: 100%;\n          }\n          body {\n            margin-left: 0px;\n            margin-bottom: 0px;\n            margin-top: 0px;\n            margin-right: 0px;\n          }\n          @charset \"UTF-8\";\n          * {\n            box-sizing: border-box;\n          }\n\n          ::-moz-selection {\n            background: #2980b9;\n            color: #fafafa;\n          }\n\n          ::selection {\n            background: #2980b9;\n            color: #fafafa;\n          }\n\n          html {\n            font-size: 1.25rem;\n          }\n\n          body {\n            background-color: #fafafa;\n          }\n\n          html {\n            font-family: \"Raleway\", \"HelveticaNeue\", \"Helvetica Neue\", Helvetica, Arial,\n              sans-serif;\n            font-size: 15px;\n          }\n\n          h1 {\n            margin-top: 0.5rem;\n            margin-bottom: 0.5rem;\n            font-family: \"Raleway\", \"HelveticaNeue\", \"Helvetica Neue\", Helvetica, Arial,\n              sans-serif;\n            font-size: 2rem;\n            color: #333333;\n          }\n\n          h2 {\n            margin-top: 0.5rem;\n            margin-bottom: 0.5rem;\n            font-family: \"Raleway\", \"HelveticaNeue\", \"Helvetica Neue\", Helvetica, Arial,\n              sans-serif;\n            font-size: 1.75rem;\n            color: #333333;\n          }\n\n          h3 {\n            margin-top: 0.5rem;\n            margin-bottom: 0.5rem;\n            font-family: \"Raleway\", \"HelveticaNeue\", \"Helvetica Neue\", Helvetica, Arial,\n              sans-serif;\n            font-size: 1.5rem;\n            color: #333333;\n          }\n\n          p {\n            margin-top: 0.5rem;\n            font-family: \"Raleway\", \"HelveticaNeue\", \"Helvetica Neue\", Helvetica, Arial,\n              sans-serif;\n            font-size: 1.25rem;\n            color: #333333;\n          }\n\n          a {\n            text-decoration: none;\n            color: #3498db;\n          }\n          a:hover {\n            color: #2980b9;\n          }\n          a:visited {\n            color: #9b59b6;\n          }\n\n          .flex {\n            display: flex;\n          }\n\n          .row {\n            display: flex;\n            flex-direction: row;\n            flex-wrap: wrap;\n            padding: 10% 2.5%;\n          }\n\n          .col {\n            flex-direction: column;\n          }\n\n          .column {\n            flex-basis: 100%;\n          }\n\n          @media (min-width: 1200px) {\n            .row {\n              display: flex;\n              flex-direction: row;\n              flex-wrap: nowrap;\n            }\n\n            .column {\n              flex: 1;\n            }\n          }\n          .wrap {\n            flex: row-wrap;\n          }\n\n          .justify-content-start {\n            justify-content: start;\n          }\n\n          .justify-content-end {\n            justify-content: end;\n          }\n\n          .justify-content-center {\n            justify-content: center;\n          }\n\n          .justify-content-between {\n            justify-content: space-between;\n          }\n\n          .justify-content-around {\n            justify-content: space-around;\n          }\n\n          .align-items-start {\n            align-items: start;\n          }\n\n          .align-items-end {\n            align-items: end;\n          }\n\n          .align-items-center {\n            align-items: center;\n          }\n\n          .align-items-baseline {\n            align-items: baseline;\n          }\n\n          .align-items-stretch {\n            align-items: stretch;\n          }\n\n          .align-self-start {\n            align-self: start;\n          }\n\n          .align-self-end {\n            align-self: end;\n          }\n\n          .align-self-center {\n            align-self: end;\n          }\n\n          .align-self-baseline {\n            align-self: baseline;\n          }\n\n          .align-self-stretch {\n            align-self: stretch;\n          }\n\n          .white-1 {\n            background: #ffffff;\n          }\n\n          .grey-1 {\n            background: #ecf0f1;\n          }\n\n          a {\n            color: #ffffff;\n          }\n          a:hover {\n            color: #f1c40f;\n          }\n        `}</style>\n      </Head>\n      <div\n        style={{\n          marginLleft: 0,\n          marginBottom: 0,\n          marginTop: 0,\n          marginRight: 0\n        }}\n      >\n        {posts.length > 0\n          ? posts.map(p => (\n              <Grid\n                key={1}\n                height={\"100%\"}\n                columns={\"1fr\"}\n                rows={\"82px 1fr 50px\"}\n                areas={[\"navbar\", \"content\", \"footer\"]}\n              >\n                {/* Navbar */}\n                <Cell area=\"navbar\">\n                  <Navbar />\n                </Cell>\n                {/* Content */}\n                <Cell area=\"content\">\n                  <Block\n                    title=\"About Us\"\n                    subtitle={null}\n                    image={p.fields.aboutPageImage.fields.file.url}\n                    text={p.fields.aboutPageText}\n                    link=\"#\"\n                    btnText={null}\n                    align=\"left\"\n                    bgColor=\"#ffffff\"\n                    log={p}\n                  />\n                </Cell>\n                <Cell area=\"footer\">\n                  <Footer />\n                </Cell>\n              </Grid>\n            ))\n          : null}\n      </div>\n    </>\n  );\n}\n\nexport default AboutPage;\n"]},"metadata":{},"sourceType":"module"}